// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccIosxeAccessListExtended(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxeAccessListExtendedConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxe_access_list_extended.test", "name", "EACL1"),
					resource.TestCheckResourceAttr("iosxe_access_list_extended.test", "entries.0.sequence", "10"),
					resource.TestCheckResourceAttr("iosxe_access_list_extended.test", "entries.0.remark", "Description"),
					resource.TestCheckResourceAttr("iosxe_access_list_extended.test", "entries.0.ace_rule_action", "permit"),
					resource.TestCheckResourceAttr("iosxe_access_list_extended.test", "entries.0.ace_rule_protocol", "tcp"),
					resource.TestCheckResourceAttr("iosxe_access_list_extended.test", "entries.0.source_prefix", "10.0.0.0"),
					resource.TestCheckResourceAttr("iosxe_access_list_extended.test", "entries.0.source_prefix_mask", "0.0.0.255"),
					resource.TestCheckResourceAttr("iosxe_access_list_extended.test", "entries.0.source_port_equal", "1000"),
					resource.TestCheckResourceAttr("iosxe_access_list_extended.test", "entries.0.destination_host", "10.1.1.1"),
					resource.TestCheckResourceAttr("iosxe_access_list_extended.test", "entries.0.destination_port_range_from", "1000"),
					resource.TestCheckResourceAttr("iosxe_access_list_extended.test", "entries.0.destination_port_range_to", "2000"),
					resource.TestCheckResourceAttr("iosxe_access_list_extended.test", "entries.0.ack", "true"),
					resource.TestCheckResourceAttr("iosxe_access_list_extended.test", "entries.0.fin", "true"),
					resource.TestCheckResourceAttr("iosxe_access_list_extended.test", "entries.0.psh", "true"),
					resource.TestCheckResourceAttr("iosxe_access_list_extended.test", "entries.0.rst", "true"),
					resource.TestCheckResourceAttr("iosxe_access_list_extended.test", "entries.0.syn", "true"),
					resource.TestCheckResourceAttr("iosxe_access_list_extended.test", "entries.0.urg", "true"),
					resource.TestCheckResourceAttr("iosxe_access_list_extended.test", "entries.0.dscp", "46"),
				),
			},
			{
				ResourceName:  "iosxe_access_list_extended.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XE-native:native/ip/access-list/Cisco-IOS-XE-acl:extended=EACL1",
			},
		},
	})
}

func testAccIosxeAccessListExtendedConfig_minimum() string {
	return `
	resource "iosxe_access_list_extended" "test" {
		name = "EACL1"
	}
	`
}

func testAccIosxeAccessListExtendedConfig_all() string {
	return `
	resource "iosxe_access_list_extended" "test" {
		name = "EACL1"
		entries = [{
			sequence = 10
			remark = "Description"
			ace_rule_action = "permit"
			ace_rule_protocol = "tcp"
			source_prefix = "10.0.0.0"
			source_prefix_mask = "0.0.0.255"
			source_port_equal = "1000"
			destination_host = "10.1.1.1"
			destination_port_range_from = "1000"
			destination_port_range_to = "2000"
			ack = true
			fin = true
			psh = true
			rst = true
			syn = true
			urg = true
			dscp = "46"
		}]
	}
	`
}
