// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccIosxeBGP(t *testing.T) {
	var checks []resource.TestCheckFunc
	checks = append(checks, resource.TestCheckResourceAttr("iosxe_bgp.test", "asn", "65000"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxe_bgp.test", "default_ipv4_unicast", "false"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxe_bgp.test", "log_neighbor_changes", "true"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxe_bgp.test", "router_id_loopback", "100"))
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxeBGPPrerequisitesConfig + testAccIosxeBGPConfig_minimum(),
			},
			{
				Config: testAccIosxeBGPPrerequisitesConfig + testAccIosxeBGPConfig_all(),
				Check:  resource.ComposeTestCheckFunc(checks...),
			},
			{
				ResourceName:  "iosxe_bgp.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000",
			},
		},
	})
}

const testAccIosxeBGPPrerequisitesConfig = `
resource "iosxe_restconf" "PreReq0" {
	path = "Cisco-IOS-XE-native:native/interface/Loopback=100"
	attributes = {
		"name" = "100"
		"ip/address/primary/address" = "200.200.200.200"
		"ip/address/primary/mask" = "255.255.255.255"
	}
}

`

func testAccIosxeBGPConfig_minimum() string {
	config := `resource "iosxe_bgp" "test" {` + "\n"
	config += `	asn = "65000"` + "\n"
	config += `	depends_on = [iosxe_restconf.PreReq0, ]` + "\n"
	config += `}` + "\n"
	return config
}

func testAccIosxeBGPConfig_all() string {
	config := `resource "iosxe_bgp" "test" {` + "\n"
	config += `	asn = "65000"` + "\n"
	config += `	default_ipv4_unicast = false` + "\n"
	config += `	log_neighbor_changes = true` + "\n"
	config += `	router_id_loopback = 100` + "\n"
	config += `	depends_on = [iosxe_restconf.PreReq0, ]` + "\n"
	config += `}` + "\n"
	return config
}
