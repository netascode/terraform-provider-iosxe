// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccDataSourceIosxeBGP(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccDataSourceIosxeBGPPrerequisitesConfig + testAccDataSourceIosxeBGPConfig,
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("data.iosxe_bgp.test", "default_ipv4_unicast", "false"),
					resource.TestCheckResourceAttr("data.iosxe_bgp.test", "log_neighbor_changes", "true"),
					resource.TestCheckResourceAttr("data.iosxe_bgp.test", "router_id_loopback", "100"),
				),
			},
		},
	})
}

const testAccDataSourceIosxeBGPPrerequisitesConfig = `
resource "iosxe_restconf" "PreReq0" {
  path = "Cisco-IOS-XE-native:native/interface/Loopback=100"
  attributes = {
      "name" = "100"
      "ip/address/primary/address" = "200.200.200.200"
      "ip/address/primary/mask" = "255.255.255.255"
  }
}

`

const testAccDataSourceIosxeBGPConfig = `

resource "iosxe_bgp" "test" {
  asn = "65000"
  default_ipv4_unicast = false
  log_neighbor_changes = true
  router_id_loopback = 100
  depends_on = [iosxe_restconf.PreReq0, ]
}

data "iosxe_bgp" "test" {
  asn = "65000"
  depends_on = [iosxe_bgp.test]
}
`
