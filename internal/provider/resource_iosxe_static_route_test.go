// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccIosxeStaticRoute(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxeStaticRouteConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxe_static_route.test", "prefix", "5.5.5.5"),
					resource.TestCheckResourceAttr("iosxe_static_route.test", "mask", "255.255.255.255"),
					resource.TestCheckResourceAttr("iosxe_static_route.test", "next_hops.0.next_hop", "6.6.6.6"),
					resource.TestCheckResourceAttr("iosxe_static_route.test", "next_hops.0.metric", "10"),
					resource.TestCheckResourceAttr("iosxe_static_route.test", "next_hops.0.global", "false"),
					resource.TestCheckResourceAttr("iosxe_static_route.test", "next_hops.0.name", "Route1"),
					resource.TestCheckResourceAttr("iosxe_static_route.test", "next_hops.0.permanent", "true"),
					resource.TestCheckResourceAttr("iosxe_static_route.test", "next_hops.0.tag", "100"),
				),
			},
			{
				ResourceName:  "iosxe_static_route.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XE-native:native/ip/route/ip-route-interface-forwarding-list=5.5.5.5,255.255.255.255",
			},
		},
	})
}

func testAccIosxeStaticRouteConfig_minimum() string {
	return `
	resource "iosxe_static_route" "test" {
		prefix = "5.5.5.5"
		mask = "255.255.255.255"
	}
	`
}

func testAccIosxeStaticRouteConfig_all() string {
	return `
	resource "iosxe_static_route" "test" {
		prefix = "5.5.5.5"
		mask = "255.255.255.255"
		next_hops = [{
			next_hop = "6.6.6.6"
			metric = 10
			global = false
			name = "Route1"
			permanent = true
			tag = 100
		}]
	}
	`
}
