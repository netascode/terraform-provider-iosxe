// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccDataSourceIosxeInterfacePortChannelSubinterface(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccDataSourceIosxeInterfacePortChannelSubinterfacePrerequisitesConfig + testAccDataSourceIosxeInterfacePortChannelSubinterfaceConfig,
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("data.iosxe_interface_port_channel_subinterface.test", "description", "My Interface Description"),
					resource.TestCheckResourceAttr("data.iosxe_interface_port_channel_subinterface.test", "shutdown", "false"),
					resource.TestCheckResourceAttr("data.iosxe_interface_port_channel_subinterface.test", "ip_proxy_arp", "false"),
					resource.TestCheckResourceAttr("data.iosxe_interface_port_channel_subinterface.test", "ip_redirects", "false"),
					resource.TestCheckResourceAttr("data.iosxe_interface_port_channel_subinterface.test", "unreachables", "false"),
					resource.TestCheckResourceAttr("data.iosxe_interface_port_channel_subinterface.test", "vrf_forwarding", "VRF1"),
					resource.TestCheckResourceAttr("data.iosxe_interface_port_channel_subinterface.test", "ipv4_address", "192.0.2.2"),
					resource.TestCheckResourceAttr("data.iosxe_interface_port_channel_subinterface.test", "ipv4_address_mask", "255.255.255.0"),
					resource.TestCheckResourceAttr("data.iosxe_interface_port_channel_subinterface.test", "encapsulation_dot1q_vlan_id", "666"),
					resource.TestCheckResourceAttr("data.iosxe_interface_port_channel_subinterface.test", "ip_access_group_in", "1"),
					resource.TestCheckResourceAttr("data.iosxe_interface_port_channel_subinterface.test", "ip_access_group_in_enable", "true"),
					resource.TestCheckResourceAttr("data.iosxe_interface_port_channel_subinterface.test", "ip_access_group_out", "1"),
					resource.TestCheckResourceAttr("data.iosxe_interface_port_channel_subinterface.test", "ip_access_group_out_enable", "true"),
					resource.TestCheckResourceAttr("data.iosxe_interface_port_channel_subinterface.test", "helper_addresses.0.address", "10.10.10.10"),
					resource.TestCheckResourceAttr("data.iosxe_interface_port_channel_subinterface.test", "helper_addresses.0.global", "false"),
				),
			},
		},
	})
}

const testAccDataSourceIosxeInterfacePortChannelSubinterfacePrerequisitesConfig = `
resource "iosxe_restconf" "PreReq0" {
  path = "Cisco-IOS-XE-native:native/vrf/definition=VRF1"
  delete = false
  attributes = {
      "name" = "VRF1"
      "address-family/ipv4" = ""
  }
}

resource "iosxe_restconf" "PreReq1" {
  path = "Cisco-IOS-XE-native:native/interface/Port-channel=10"
  attributes = {
      "name" = "10"
  }
}

`

const testAccDataSourceIosxeInterfacePortChannelSubinterfaceConfig = `

resource "iosxe_interface_port_channel_subinterface" "test" {
  name = "10.666"
  description = "My Interface Description"
  shutdown = false
  ip_proxy_arp = false
  ip_redirects = false
  unreachables = false
  vrf_forwarding = "VRF1"
  ipv4_address = "192.0.2.2"
  ipv4_address_mask = "255.255.255.0"
  encapsulation_dot1q_vlan_id = 666
  ip_access_group_in = "1"
  ip_access_group_in_enable = true
  ip_access_group_out = "1"
  ip_access_group_out_enable = true
  helper_addresses = [{
    address = "10.10.10.10"
    global = false
  }]
  depends_on = [iosxe_restconf.PreReq0, iosxe_restconf.PreReq1, ]
}

data "iosxe_interface_port_channel_subinterface" "test" {
  name = "10.666"
  depends_on = [iosxe_interface_port_channel_subinterface.test]
}
`
