// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccIosxeInterfacePortChannel(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxeInterfacePortChannelPrerequisitesConfig + testAccIosxeInterfacePortChannelConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxe_interface_portchannel.test", "name", "100"),
					resource.TestCheckResourceAttr("iosxe_interface_portchannel.test", "description", "My Interface Description"),
					resource.TestCheckResourceAttr("iosxe_interface_portchannel.test", "shutdown", "false"),
					resource.TestCheckResourceAttr("iosxe_interface_portchannel.test", "vrf_forwarding", "VRF1"),
					resource.TestCheckResourceAttr("iosxe_interface_portchannel.test", "ipv4_address", "192.0.2.1"),
					resource.TestCheckResourceAttr("iosxe_interface_portchannel.test", "ipv4_address_mask", "255.255.255.0"),
				),
			},
			{
				ResourceName:  "iosxe_interface_portchannel.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XE-native:native/interface/Port-channel=100",
			},
		},
	})
}

const testAccIosxeInterfacePortChannelPrerequisitesConfig = `
resource "iosxe_restconf" "PreReq0" {
  path = "Cisco-IOS-XE-native:native/vrf/definition=VRF1"
  delete = false
  attributes = {
      name = "VRF1"
  }
}

resource "iosxe_restconf" "PreReq1" {
  path = "Cisco-IOS-XE-native:native/vrf/definition=VRF1/address-family"
  delete = false
  attributes = {
      ipv4 = ""
  }
  depends_on = [iosxe_restconf.PreReq0, ]
}

`

func testAccIosxeInterfacePortChannelConfig_minimum() string {
	return `
	resource "iosxe_interface_portchannel" "test" {
		name = 100
  		depends_on = [iosxe_restconf.PreReq0, iosxe_restconf.PreReq1, ]
	}
	`
}

func testAccIosxeInterfacePortChannelConfig_all() string {
	return `
	resource "iosxe_interface_portchannel" "test" {
		name = 100
		description = "My Interface Description"
		shutdown = false
		vrf_forwarding = "VRF1"
		ipv4_address = "192.0.2.1"
		ipv4_address_mask = "255.255.255.0"
  		depends_on = [iosxe_restconf.PreReq0, iosxe_restconf.PreReq1, ]
	}
	`
}
