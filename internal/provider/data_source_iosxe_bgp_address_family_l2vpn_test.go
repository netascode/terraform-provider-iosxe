// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"os"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccDataSourceIosxeBGPAddressFamilyL2VPN(t *testing.T) {
	if os.Getenv("C9000V") == "" {
		t.Skip("skipping test, set environment variable C9000V")
	}
	var checks []resource.TestCheckFunc
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccDataSourceIosxeBGPAddressFamilyL2VPNPrerequisitesConfig + testAccDataSourceIosxeBGPAddressFamilyL2VPNConfig(),
				Check:  resource.ComposeTestCheckFunc(checks...),
			},
		},
	})
}

const testAccDataSourceIosxeBGPAddressFamilyL2VPNPrerequisitesConfig = `
resource "iosxe_restconf" "PreReq0" {
	path = "Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000"
	attributes = {
		"id" = "65000"
	}
}

`

func testAccDataSourceIosxeBGPAddressFamilyL2VPNConfig() string {
	config := `resource "iosxe_bgp_address_family_l2vpn" "test" {` + "\n"
	config += `	delete_mode = "attributes"` + "\n"
	config += `	asn = "65000"` + "\n"
	config += `	af_name = "evpn"` + "\n"
	config += `	depends_on = [iosxe_restconf.PreReq0, ]` + "\n"
	config += `}` + "\n"

	config += `
		data "iosxe_bgp_address_family_l2vpn" "test" {
			asn = "65000"
			af_name = "evpn"
			depends_on = [iosxe_bgp_address_family_l2vpn.test]
		}
	`
	return config
}
