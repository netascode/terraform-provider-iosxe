// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccIosxeBanner(t *testing.T) {
	var checks []resource.TestCheckFunc
	checks = append(checks, resource.TestCheckResourceAttr("iosxe_banner.test", "exec_banner", "My Exec Banner"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxe_banner.test", "login_banner", "My Login Banner"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxe_banner.test", "prompt_timeout_banner", "My Prompt-Timeout Banner"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxe_banner.test", "motd_banner", "My MOTD Banner"))
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxeBannerConfig_minimum(),
			},
			{
				Config: testAccIosxeBannerConfig_all(),
				Check:  resource.ComposeTestCheckFunc(checks...),
			},
			{
				ResourceName:  "iosxe_banner.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XE-native:native/banner",
			},
		},
	})
}

func testAccIosxeBannerConfig_minimum() string {
	config := `resource "iosxe_banner" "test" {` + "\n"
	config += `}` + "\n"
	return config
}

func testAccIosxeBannerConfig_all() string {
	config := `resource "iosxe_banner" "test" {` + "\n"
	config += `	exec_banner = "My Exec Banner"` + "\n"
	config += `	login_banner = "My Login Banner"` + "\n"
	config += `	prompt_timeout_banner = "My Prompt-Timeout Banner"` + "\n"
	config += `	motd_banner = "My MOTD Banner"` + "\n"
	config += `}` + "\n"
	return config
}
