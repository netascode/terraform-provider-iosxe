// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccDataSourceIosxeLoggingIPv4HostVRFTransport(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccDataSourceIosxeLoggingIPv4HostVRFTransportPrerequisitesConfig + testAccDataSourceIosxeLoggingIPv4HostVRFTransportConfig,
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("data.iosxe_logging_ipv4_host_vrf_transport.test", "transport_udp_ports.0.port_number", "10000"),
					resource.TestCheckResourceAttr("data.iosxe_logging_ipv4_host_vrf_transport.test", "transport_tcp_ports.0.port_number", "10001"),
					resource.TestCheckResourceAttr("data.iosxe_logging_ipv4_host_vrf_transport.test", "transport_tls_ports.0.port_number", "10002"),
				),
			},
		},
	})
}

const testAccDataSourceIosxeLoggingIPv4HostVRFTransportPrerequisitesConfig = `
resource "iosxe_restconf" "PreReq0" {
  path = "Cisco-IOS-XE-native:native/vrf/definition=VRF1"
  delete = false
  attributes = {
      name = "VRF1"
  }
}

resource "iosxe_restconf" "PreReq1" {
  path = "Cisco-IOS-XE-native:native/vrf/definition=VRF1/address-family"
  delete = false
  attributes = {
      ipv4 = ""
      ipv6 = ""
  }
  depends_on = [iosxe_restconf.PreReq0, ]
}

`

const testAccDataSourceIosxeLoggingIPv4HostVRFTransportConfig = `

resource "iosxe_logging_ipv4_host_vrf_transport" "test" {
  ipv4_host = "2.2.2.2"
  vrf = "VRF1"
  transport_udp_ports = [{
    port_number = 10000
  }]
  transport_tcp_ports = [{
    port_number = 10001
  }]
  transport_tls_ports = [{
    port_number = 10002
  }]
  depends_on = [iosxe_restconf.PreReq0, iosxe_restconf.PreReq1, ]
}

data "iosxe_logging_ipv4_host_vrf_transport" "test" {
  ipv4_host = "2.2.2.2"
  vrf = "VRF1"
  depends_on = [iosxe_logging_ipv4_host_vrf_transport.test]
}
`
