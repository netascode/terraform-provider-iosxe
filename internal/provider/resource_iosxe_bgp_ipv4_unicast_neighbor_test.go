// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccIosxeBGPIPv4UnicastNeighbor(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxeBGPIPv4UnicastNeighborPrerequisitesConfig + testAccIosxeBGPIPv4UnicastNeighborConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("iosxe_bgp_ipv4_unicast_neighbor.test", "ip", "3.3.3.3"),
					resource.TestCheckResourceAttr("iosxe_bgp_ipv4_unicast_neighbor.test", "activate", "true"),
					resource.TestCheckResourceAttr("iosxe_bgp_ipv4_unicast_neighbor.test", "send_community", "both"),
					resource.TestCheckResourceAttr("iosxe_bgp_ipv4_unicast_neighbor.test", "route_reflector_client", "false"),
					resource.TestCheckResourceAttr("iosxe_bgp_ipv4_unicast_neighbor.test", "route_maps.0.in_out", "in"),
					resource.TestCheckResourceAttr("iosxe_bgp_ipv4_unicast_neighbor.test", "route_maps.0.route_map_name", "RM1"),
				),
			},
			{
				ResourceName:  "iosxe_bgp_ipv4_unicast_neighbor.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000/address-family/no-vrf/ipv4=unicast/ipv4-unicast/neighbor=3.3.3.3",
			},
		},
	})
}

const testAccIosxeBGPIPv4UnicastNeighborPrerequisitesConfig = `
resource "iosxe_restconf" "PreReq0" {
	path = "Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000"
	attributes = {
		"id" = "65000"
	}
}

resource "iosxe_restconf" "PreReq1" {
	path = "Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000/address-family/no-vrf/ipv4=unicast"
	attributes = {
		"af-name" = "unicast"
	}
	depends_on = [iosxe_restconf.PreReq0, ]
}

resource "iosxe_restconf" "PreReq2" {
	path = "Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000/neighbor=3.3.3.3"
	attributes = {
		"id" = "3.3.3.3"
		"remote-as" = "65000"
	}
	depends_on = [iosxe_restconf.PreReq0, ]
}

resource "iosxe_restconf" "PreReq3" {
	path = "Cisco-IOS-XE-native:native/interface/Loopback=100"
	attributes = {
		"name" = "100"
	}
}

`

func testAccIosxeBGPIPv4UnicastNeighborConfig_minimum() string {
	return `
	resource "iosxe_bgp_ipv4_unicast_neighbor" "test" {
		asn = "65000"
		ip = "3.3.3.3"
		depends_on = [iosxe_restconf.PreReq0, iosxe_restconf.PreReq1, iosxe_restconf.PreReq2, iosxe_restconf.PreReq3, ]
	}
	`
}

func testAccIosxeBGPIPv4UnicastNeighborConfig_all() string {
	return `
	resource "iosxe_bgp_ipv4_unicast_neighbor" "test" {
		asn = "65000"
		ip = "3.3.3.3"
		activate = true
		send_community = "both"
		route_reflector_client = false
		route_maps = [{
			in_out = "in"
			route_map_name = "RM1"
		}]
		depends_on = [iosxe_restconf.PreReq0, iosxe_restconf.PreReq1, iosxe_restconf.PreReq2, iosxe_restconf.PreReq3, ]
	}
	`
}
